diff --git a/pluginhost/JuceLibraryCode/modules/juce_core/native/juce_posix_SharedCode.h b/pluginhost/JuceLibraryCode/modules/juce_core/native/juce_posix_SharedCode.h
index 787cf2c58..c15f9c365 100644
--- a/pluginhost/JuceLibraryCode/modules/juce_core/native/juce_posix_SharedCode.h
+++ b/pluginhost/JuceLibraryCode/modules/juce_core/native/juce_posix_SharedCode.h
@@ -907,7 +907,7 @@ void Thread::launchThread()
     {
         pthread_detach (handle);
         threadHandle = (void*) handle;
-        threadId = (ThreadID) threadHandle.get();
+        threadId = (ThreadID) threadHandle.get(); // Theoretically this line is not necessary anymore. However, I'm not 100% if threadId is not used from this thread before waiting for the thread has started, so better leave it. (we'll probably get a tsan hit here as well, but that hit can probably be safely ignored)
     }
 
     if (attrPtr != nullptr)
diff --git a/pluginhost/JuceLibraryCode/modules/juce_core/threads/juce_Thread.cpp b/pluginhost/JuceLibraryCode/modules/juce_core/threads/juce_Thread.cpp
index 10490e9d9..41f04ad04 100644
--- a/pluginhost/JuceLibraryCode/modules/juce_core/threads/juce_Thread.cpp
+++ b/pluginhost/JuceLibraryCode/modules/juce_core/threads/juce_Thread.cpp
@@ -84,8 +84,12 @@ void Thread::threadEntryPoint()
     if (threadName.isNotEmpty())
         setCurrentThreadName (threadName);
 
+#if 0
     jassert (getCurrentThreadId() == threadId.get());
-
+#else
+    threadId = getCurrentThreadId(); // Setthing threadId must be done here now.
+#endif
+    
     if (affinityMask != 0)
       setCurrentThreadAffinityMask (affinityMask);
 
